# -*- coding: utf-8 -*-

# Bogus Balangao

################################## DATA #################################

# Simplify for syllabification
define ROOTS {hIgIp} | {hIdIm} | {hIdIn} | {gihib} | {ledeh} ;

############################# BASIC DEFINITIONS #########################

define V [ a | e | i | I | o | u ] ;

# q = glottal stop
define C [ b | d | g | h | k | l | m | n | p | q | t ] ;

define SEGMENT [ V | C ] ;

define HighV [ u | i | I ] ;
define GLOTTAL [ h | q ] ;
# sholud call this "non-glottal obstruent"
define OBSTRUENT [ b | d | g | k | p | t] ;
# In the sense of "potential vocalic nucleus"
define SONORANT [ V ] ;

define GENTAGS [ %+DelV | %+DelC | %+Met | %+MetCC | %+MetCV | %+MetVV | 
    %+MetWithinMorph | %+MetBetweenMorph ] ;

define BOUNDARY [ %+ | .#. | %. ] ;
define EDGE [ .#. | %. ] ;

# Syllable boundary
define SB [~$%. %. ~$%.];

define Light [C* V];
define Heavy [Light SEGMENT+];

define S [ Heavy | Light ] ;

############################# MORPHOLOGY ################################

define PREFIXES [ {qi} | {ma} | {pu} ] %+ ;
define SUFFIXES %+ [ {In} | {um} | {to} ] ;

# In real Balangao, high vowels delete in the presence of certain morphemes.
# This rule presents a simplified version of this process.
define Syncope [C* V C* HighV:0 C* V C*]/[GENTAGS | %+] .P. ?* ;

define Morphology (PREFIXES) ROOTS | ROOTS (SUFFIXES) .o. Syncope;

################################### GEN ##################################

define Syllabify SEGMENT (->) ... "." || _ SEGMENT/[GENTAGS | %+] ;

# Had Shuffle rules in this form, but - while it worked - it was 
# very inefficient and led to memory problems
#[ [?* m:l l:m ?* []:%+Met]/GENTAGS | ~$[m l]/GENTAGS ] | ?* ].o.

# Both within and across morpheme boundaries
define Shuffle a e (->) e a %+MetVV %+MetWithinMorph, e a (->) a e %+MetVV %+MetWithinMorph,
a i (->) i a %+MetVV %+MetWithinMorph, i a (->) a i %+MetVV %+MetWithinMorph,
a I (->) I a %+MetVV %+MetWithinMorph, I a (->) a I %+MetVV %+MetWithinMorph,
a o (->) o a %+MetVV %+MetWithinMorph, o a (->) a o %+MetVV %+MetWithinMorph,
a u (->) u a %+MetVV %+MetWithinMorph, u a (->) a u %+MetVV %+MetWithinMorph,
e i (->) i e %+MetVV %+MetWithinMorph, i e (->) e i %+MetVV %+MetWithinMorph,
e I (->) I e %+MetVV %+MetWithinMorph, I e (->) e I %+MetVV %+MetWithinMorph,
e o (->) o e %+MetVV %+MetWithinMorph, o e (->) e o %+MetVV %+MetWithinMorph,
e u (->) u e %+MetVV %+MetWithinMorph, u e (->) e u %+MetVV %+MetWithinMorph,
i I (->) I i %+MetVV %+MetWithinMorph, I i (->) i I %+MetVV %+MetWithinMorph,
i o (->) o i %+MetVV %+MetWithinMorph, o i (->) i o %+MetVV %+MetWithinMorph,
i u (->) u i %+MetVV %+MetWithinMorph, u i (->) i u %+MetVV %+MetWithinMorph,
I o (->) o I %+MetVV %+MetWithinMorph, o I (->) I o %+MetVV %+MetWithinMorph,
I u (->) u I %+MetVV %+MetWithinMorph, u I (->) I u %+MetVV %+MetWithinMorph,
o u (->) u o %+MetVV %+MetWithinMorph, u o (->) o u %+MetVV %+MetWithinMorph,
a e (->) e a %+MetVV %+MetBetweenMorph, e a (->) a e %+MetVV %+MetBetweenMorph,
a %+ i (->) i %+ a %+MetVV %+MetBetweenMorph, i %+ a (->) a %+ i %+MetVV %+MetBetweenMorph,
a %+ I (->) I %+ a %+MetVV %+MetBetweenMorph, I %+ a (->) a %+ I %+MetVV %+MetBetweenMorph,
a %+ o (->) o %+ a %+MetVV %+MetBetweenMorph, o %+ a (->) a %+ o %+MetVV %+MetBetweenMorph,
a %+ u (->) u %+ a %+MetVV %+MetBetweenMorph, u %+ a (->) a %+ u %+MetVV %+MetBetweenMorph,
e %+ i (->) i %+ e %+MetVV %+MetBetweenMorph, i %+ e (->) e %+ i %+MetVV %+MetBetweenMorph,
e %+ I (->) I %+ e %+MetVV %+MetBetweenMorph, I %+ e (->) e %+ I %+MetVV %+MetBetweenMorph,
e %+ o (->) o %+ e %+MetVV %+MetBetweenMorph, o %+ e (->) e %+ o %+MetVV %+MetBetweenMorph,
e %+ u (->) u %+ e %+MetVV %+MetBetweenMorph, u %+ e (->) e %+ u %+MetVV %+MetBetweenMorph,
i %+ I (->) I %+ i %+MetVV %+MetBetweenMorph, I %+ i (->) i %+ I %+MetVV %+MetBetweenMorph,
i %+ o (->) o %+ i %+MetVV %+MetBetweenMorph, o %+ i (->) i %+ o %+MetVV %+MetBetweenMorph,
i %+ u (->) u %+ i %+MetVV %+MetBetweenMorph, u %+ i (->) i %+ u %+MetVV %+MetBetweenMorph,
I %+ o (->) o %+ I %+MetVV %+MetBetweenMorph, o %+ I (->) I %+ o %+MetVV %+MetBetweenMorph,
I %+ u (->) u %+ I %+MetVV %+MetBetweenMorph, u %+ I (->) I %+ u %+MetVV %+MetBetweenMorph,
o %+ u (->) u %+ o %+MetVV %+MetBetweenMorph, u %+ o (->) o %+ u %+MetVV %+MetBetweenMorph,
h q (->) q h %+MetCC %+MetWithinMorph, q h (->) h q %+MetCC %+MetWithinMorph,
h b (->) b h %+MetCC %+MetWithinMorph, h d (->) d h %+MetCC %+MetWithinMorph, 
h g (->) g h %+MetCC %+MetWithinMorph, 
g h (->) h g %+MetCC %+MetWithinMorph, d h (->) h d %+MetCC %+MetWithinMorph, 
b h (->) h b %+MetCC %+MetWithinMorph, 
h t (->) t h %+MetCC %+MetWithinMorph, t h (->) h t %+MetCC %+MetWithinMorph,
h k (->) k h %+MetCC %+MetWithinMorph, k h (->) h k %+MetCC %+MetWithinMorph,
h p (->) p h %+MetCC %+MetWithinMorph, p h (->) h p %+MetCC %+MetWithinMorph,
q b (->) b q %+MetCC %+MetWithinMorph, q d (->) d q %+MetCC %+MetWithinMorph, 
q g (->) g q %+MetCC %+MetWithinMorph %+MetWithinMorph, 
g q (->) q g %+MetCC %+MetWithinMorph, d q (->) q d %+MetCC %+MetWithinMorph, 
b q (->) q b %+MetCC %+MetWithinMorph %+MetWithinMorph,
q t (->) t q %+MetCC %+MetWithinMorph, t q (->) q t %+MetCC %+MetWithinMorph,
q k (->) k q %+MetCC %+MetWithinMorph, k q (->) q k %+MetCC %+MetWithinMorph,
q p (->) p q %+MetCC %+MetWithinMorph, p q (->) q p %+MetCC %+MetWithinMorph,
b d (->) d b %+MetCC %+MetWithinMorph, b g (->) g b %+MetCC %+MetWithinMorph, 
g b (->) b g %+MetCC %+MetWithinMorph, d b (->) b d %+MetCC %+MetWithinMorph, 
b t (->) t b %+MetCC %+MetWithinMorph, t b (->) b t %+MetCC %+MetWithinMorph,
b k (->) k b %+MetCC %+MetWithinMorph, k b (->) b k %+MetCC %+MetWithinMorph,
d g (->) g d %+MetCC %+MetWithinMorph, g d (->) d g %+MetCC %+MetWithinMorph, 
d t (->) t d %+MetCC %+MetWithinMorph, t d (->) d t %+MetCC %+MetWithinMorph,
d k (->) k d %+MetCC %+MetWithinMorph, k d (->) d k %+MetCC %+MetWithinMorph,
g t (->) t g %+MetCC %+MetWithinMorph, t g (->) g t %+MetCC %+MetWithinMorph,
g k (->) k g %+MetCC %+MetWithinMorph, k g (->) g k %+MetCC %+MetWithinMorph,
k t (->) t k %+MetCC %+MetWithinMorph, t k (->) k t %+MetCC %+MetWithinMorph,
h %+ q (->) q %+ h %+MetCC %+MetBetweenMorph, q %+ h (->) h %+ q %+MetCC %+MetBetweenMorph,
h %+ b (->) b %+ h %+MetCC %+MetBetweenMorph, h %+ d (->) d %+ h %+MetCC %+MetBetweenMorph, h %+ g (->) g %+ h %+MetBetweenMorph, 
g %+ h (->) h %+ g %+MetCC %+MetBetweenMorph, d %+ h (->) h %+ d %+MetCC %+MetBetweenMorph, b %+ h (->) h %+ b %+MetBetweenMorph, 
h %+ t (->) t %+ h %+MetCC %+MetBetweenMorph, t %+ h (->) h %+ t %+MetCC %+MetBetweenMorph,
h %+ k (->) k %+ h %+MetCC %+MetBetweenMorph, k %+ h (->) h %+ k %+MetCC %+MetBetweenMorph,
h %+ p (->) p %+ h %+MetCC %+MetBetweenMorph, p %+ h (->) h %+ p %+MetCC %+MetBetweenMorph,
q %+ b (->) b %+ q %+MetCC %+MetBetweenMorph, q %+ d (->) d %+ q %+MetCC %+MetBetweenMorph, q %+ g (->) g %+ q %+MetBetweenMorph, 
g %+ q (->) q %+ g %+MetCC %+MetBetweenMorph, d %+ q (->) q %+ d %+MetCC %+MetBetweenMorph, b %+ q (->) q %+ b %+MetBetweenMorph,
q %+ t (->) t %+ q %+MetCC %+MetBetweenMorph, t %+ q (->) q %+ t %+MetCC %+MetBetweenMorph,
q %+ k (->) k %+ q %+MetCC %+MetBetweenMorph, k %+ q (->) q %+ k %+MetCC %+MetBetweenMorph,
q %+ p (->) p %+ q %+MetCC %+MetBetweenMorph, p %+ q (->) q %+ p %+MetCC %+MetBetweenMorph,
b %+ d (->) d %+ b %+MetCC %+MetBetweenMorph, b %+ g (->) g %+ b %+MetCC %+MetBetweenMorph, 
g %+ b (->) b %+ g %+MetCC %+MetBetweenMorph, d %+ b (->) b %+ d %+MetCC %+MetBetweenMorph, 
b %+ t (->) t %+ b %+MetCC %+MetBetweenMorph, t %+ b (->) b %+ t %+MetCC %+MetBetweenMorph,
b %+ k (->) k %+ b %+MetCC %+MetBetweenMorph, k %+ b (->) b %+ k %+MetCC %+MetBetweenMorph,
d %+ g (->) g %+ d %+MetCC %+MetBetweenMorph, g %+ d (->) d %+ g %+MetCC %+MetBetweenMorph, 
d %+ t (->) t %+ d %+MetCC %+MetBetweenMorph, t %+ d (->) d %+ t %+MetCC %+MetBetweenMorph,
d %+ k (->) k %+ d %+MetCC %+MetBetweenMorph, k %+ d (->) d %+ k %+MetCC %+MetBetweenMorph,
g %+ t (->) t %+ g %+MetCC %+MetBetweenMorph, t %+ g (->) g %+ t %+MetCC %+MetBetweenMorph,
g %+ k (->) k %+ g %+MetCC %+MetBetweenMorph, k %+ g (->) g %+ k %+MetCC %+MetBetweenMorph,
k %+ t (->) t %+ k %+MetCC %+MetBetweenMorph, t %+ k (->) k %+ t %+MetCC %+MetBetweenMorph,
a b (->) b a %+MetCV %+MetWithinMorph, b a (->) a b %+MetCV %+MetWithinMorph,
a d (->) d a %+MetCV %+MetWithinMorph, d a (->) a d %+MetCV %+MetWithinMorph,
a g (->) g a %+MetCV %+MetWithinMorph, g a (->) a g %+MetCV %+MetWithinMorph,
a h (->) h a %+MetCV %+MetWithinMorph, h a (->) a h %+MetCV %+MetWithinMorph,
a k (->) k a %+MetCV %+MetWithinMorph, k a (->) a k %+MetCV %+MetWithinMorph,
a p (->) p a %+MetCV %+MetWithinMorph, p a (->) a p %+MetCV %+MetWithinMorph,
a q (->) q a %+MetCV %+MetWithinMorph, q a (->) a q %+MetCV %+MetWithinMorph,
a t (->) t a %+MetCV %+MetWithinMorph, t a (->) a t %+MetCV %+MetWithinMorph,
e b (->) b e %+MetCV %+MetWithinMorph, b e (->) e b %+MetCV %+MetWithinMorph,
e d (->) d e %+MetCV %+MetWithinMorph, d e (->) e d %+MetCV %+MetWithinMorph,
e g (->) g e %+MetCV %+MetWithinMorph, g e (->) e g %+MetCV %+MetWithinMorph,
e h (->) h e %+MetCV %+MetWithinMorph, h e (->) e h %+MetCV %+MetWithinMorph,
e k (->) k e %+MetCV %+MetWithinMorph, k e (->) e k %+MetCV %+MetWithinMorph,
e p (->) p e %+MetCV %+MetWithinMorph, p e (->) e p %+MetCV %+MetWithinMorph,
e q (->) q e %+MetCV %+MetWithinMorph, q e (->) e q %+MetCV %+MetWithinMorph,
e t (->) t e %+MetCV %+MetWithinMorph, t e (->) e t %+MetCV %+MetWithinMorph,
I b (->) b I %+MetCV %+MetWithinMorph, b I (->) I b %+MetCV %+MetWithinMorph,
I d (->) d I %+MetCV %+MetWithinMorph, d I (->) I d %+MetCV %+MetWithinMorph,
I g (->) g I %+MetCV %+MetWithinMorph, g I (->) I g %+MetCV %+MetWithinMorph,
I h (->) h I %+MetCV %+MetWithinMorph, h I (->) I h %+MetCV %+MetWithinMorph,
I k (->) k I %+MetCV %+MetWithinMorph, k I (->) I k %+MetCV %+MetWithinMorph,
I p (->) p I %+MetCV %+MetWithinMorph, p I (->) I p %+MetCV %+MetWithinMorph,
I q (->) q I %+MetCV %+MetWithinMorph, q I (->) I q %+MetCV %+MetWithinMorph,
I t (->) t I %+MetCV %+MetWithinMorph, t I (->) I t %+MetCV %+MetWithinMorph,
o b (->) b o %+MetCV %+MetWithinMorph, b o (->) o b %+MetCV %+MetWithinMorph,
o d (->) d o %+MetCV %+MetWithinMorph, d o (->) o d %+MetCV %+MetWithinMorph,
o g (->) g o %+MetCV %+MetWithinMorph, g o (->) o g %+MetCV %+MetWithinMorph,
o h (->) h o %+MetCV %+MetWithinMorph, h o (->) o h %+MetCV %+MetWithinMorph,
o k (->) k o %+MetCV %+MetWithinMorph, k o (->) o k %+MetCV %+MetWithinMorph,
o p (->) p o %+MetCV %+MetWithinMorph, p o (->) o p %+MetCV %+MetWithinMorph,
o q (->) q o %+MetCV %+MetWithinMorph, q o (->) o q %+MetCV %+MetWithinMorph,
o t (->) t o %+MetCV %+MetWithinMorph, t o (->) o t %+MetCV %+MetWithinMorph,
u b (->) b u %+MetCV %+MetWithinMorph, b u (->) u b %+MetCV %+MetWithinMorph,
u d (->) d u %+MetCV %+MetWithinMorph, d u (->) u d %+MetCV %+MetWithinMorph,
u g (->) g u %+MetCV %+MetWithinMorph, g u (->) u g %+MetCV %+MetWithinMorph,
u h (->) h u %+MetCV %+MetWithinMorph, h u (->) u h %+MetCV %+MetWithinMorph,
u k (->) k u %+MetCV %+MetWithinMorph, k u (->) u k %+MetCV %+MetWithinMorph,
u p (->) p u %+MetCV %+MetWithinMorph, p u (->) u p %+MetCV %+MetWithinMorph,
u q (->) q u %+MetCV %+MetWithinMorph, q u (->) u q %+MetCV %+MetWithinMorph,
u t (->) t u %+MetCV %+MetWithinMorph, t u (->) u t %+MetCV %+MetWithinMorph,
a %+ b (->) b %+ a %+MetCV %+MetBetweenMorph, b %+ a (->) a %+ b %+MetCV %+MetBetweenMorph,
a %+ d (->) d %+ a %+MetCV %+MetBetweenMorph, d %+ a (->) a %+ d %+MetCV %+MetBetweenMorph,
a %+ g (->) g %+ a %+MetCV %+MetBetweenMorph, g %+ a (->) a %+ g %+MetCV %+MetBetweenMorph,
a %+ h (->) h %+ a %+MetCV %+MetBetweenMorph, h %+ a (->) a %+ h %+MetCV %+MetBetweenMorph,
a %+ k (->) k %+ a %+MetCV %+MetBetweenMorph, k %+ a (->) a %+ k %+MetCV %+MetBetweenMorph,
a %+ p (->) p %+ a %+MetCV %+MetBetweenMorph, p %+ a (->) a %+ p %+MetCV %+MetBetweenMorph,
a %+ q (->) q %+ a %+MetCV %+MetBetweenMorph, q %+ a (->) a %+ q %+MetCV %+MetBetweenMorph,
a %+ t (->) t %+ a %+MetCV %+MetBetweenMorph, t %+ a (->) a %+ t %+MetCV %+MetBetweenMorph,
e %+ b (->) b %+ e %+MetCV %+MetBetweenMorph, b %+ e (->) e %+ b %+MetCV %+MetBetweenMorph,
e %+ d (->) d %+ e %+MetCV %+MetBetweenMorph, d %+ e (->) e %+ d %+MetCV %+MetBetweenMorph,
e %+ g (->) g %+ e %+MetCV %+MetBetweenMorph, g %+ e (->) e %+ g %+MetCV %+MetBetweenMorph,
e %+ h (->) h %+ e %+MetCV %+MetBetweenMorph, h %+ e (->) e %+ h %+MetCV %+MetBetweenMorph,
e %+ k (->) k %+ e %+MetCV %+MetBetweenMorph, k %+ e (->) e %+ k %+MetCV %+MetBetweenMorph,
e %+ p (->) p %+ e %+MetCV %+MetBetweenMorph, p %+ e (->) e %+ p %+MetCV %+MetBetweenMorph,
e %+ q (->) q %+ e %+MetCV %+MetBetweenMorph, q %+ e (->) e %+ q %+MetCV %+MetBetweenMorph,
e %+ t (->) t %+ e %+MetCV %+MetBetweenMorph, t %+ e (->) e %+ t %+MetCV %+MetBetweenMorph,
i %+ b (->) b %+ i %+MetCV %+MetBetweenMorph, b %+ i (->) i %+ b %+MetCV %+MetBetweenMorph,
i %+ d (->) d %+ i %+MetCV %+MetBetweenMorph, d %+ i (->) i %+ d %+MetCV %+MetBetweenMorph,
i %+ g (->) g %+ i %+MetCV %+MetBetweenMorph, g %+ i (->) i %+ g %+MetCV %+MetBetweenMorph,
i %+ h (->) h %+ i %+MetCV %+MetBetweenMorph, h %+ i (->) i %+ h %+MetCV %+MetBetweenMorph,
i %+ k (->) k %+ i %+MetCV %+MetBetweenMorph, k %+ i (->) i %+ k %+MetCV %+MetBetweenMorph,
i %+ p (->) p %+ i %+MetCV %+MetBetweenMorph, p %+ i (->) i %+ p %+MetCV %+MetBetweenMorph,
i %+ q (->) q %+ i %+MetCV %+MetBetweenMorph, q %+ i (->) i %+ q %+MetCV %+MetBetweenMorph,
i %+ t (->) t %+ i %+MetCV %+MetBetweenMorph, t %+ i (->) i %+ t %+MetCV %+MetBetweenMorph,
I %+ b (->) b %+ I %+MetCV %+MetBetweenMorph, b %+ I (->) I %+ b %+MetCV %+MetBetweenMorph,
I %+ d (->) d %+ I %+MetCV %+MetBetweenMorph, d %+ I (->) I %+ d %+MetCV %+MetBetweenMorph,
I %+ g (->) g %+ I %+MetCV %+MetBetweenMorph, g %+ I (->) I %+ g %+MetCV %+MetBetweenMorph,
I %+ h (->) h %+ I %+MetCV %+MetBetweenMorph, h %+ I (->) I %+ h %+MetCV %+MetBetweenMorph,
I %+ k (->) k %+ I %+MetCV %+MetBetweenMorph, k %+ I (->) I %+ k %+MetCV %+MetBetweenMorph,
I %+ p (->) p %+ I %+MetCV %+MetBetweenMorph, p %+ I (->) I %+ p %+MetCV %+MetBetweenMorph,
I %+ q (->) q %+ I %+MetCV %+MetBetweenMorph, q %+ I (->) I %+ q %+MetCV %+MetBetweenMorph,
I %+ t (->) t %+ I %+MetCV %+MetBetweenMorph, t %+ I (->) I %+ t %+MetCV %+MetBetweenMorph,
o %+ b (->) b %+ o %+MetCV %+MetBetweenMorph, b %+ o (->) o %+ b %+MetCV %+MetBetweenMorph,
o %+ d (->) d %+ o %+MetCV %+MetBetweenMorph, d %+ o (->) o %+ d %+MetCV %+MetBetweenMorph,
o %+ g (->) g %+ o %+MetCV %+MetBetweenMorph, g %+ o (->) o %+ g %+MetCV %+MetBetweenMorph,
o %+ h (->) h %+ o %+MetCV %+MetBetweenMorph, h %+ o (->) o %+ h %+MetCV %+MetBetweenMorph,
o %+ k (->) k %+ o %+MetCV %+MetBetweenMorph, k %+ o (->) o %+ k %+MetCV %+MetBetweenMorph,
o %+ p (->) p %+ o %+MetCV %+MetBetweenMorph, p %+ o (->) o %+ p %+MetCV %+MetBetweenMorph,
o %+ q (->) q %+ o %+MetCV %+MetBetweenMorph, q %+ o (->) o %+ q %+MetCV %+MetBetweenMorph,
o %+ t (->) t %+ o %+MetCV %+MetBetweenMorph, t %+ o (->) o %+ t %+MetCV %+MetBetweenMorph,
u %+ b (->) b %+ u %+MetCV %+MetBetweenMorph, b %+ u (->) u %+ b %+MetCV %+MetBetweenMorph,
u %+ d (->) d %+ u %+MetCV %+MetBetweenMorph, d %+ u (->) u %+ d %+MetCV %+MetBetweenMorph,
u %+ g (->) g %+ u %+MetCV %+MetBetweenMorph, g %+ u (->) u %+ g %+MetCV %+MetBetweenMorph,
u %+ h (->) h %+ u %+MetCV %+MetBetweenMorph, h %+ u (->) u %+ h %+MetCV %+MetBetweenMorph,
u %+ k (->) k %+ u %+MetCV %+MetBetweenMorph, k %+ u (->) u %+ k %+MetCV %+MetBetweenMorph,
u %+ p (->) p %+ u %+MetCV %+MetBetweenMorph, p %+ u (->) u %+ p %+MetCV %+MetBetweenMorph,
u %+ q (->) q %+ u %+MetCV %+MetBetweenMorph, q %+ u (->) u %+ q %+MetCV %+MetBetweenMorph,
u %+ t (->) t %+ u %+MetCV %+MetBetweenMorph, t %+ u (->) u %+ t %+MetCV %+MetBetweenMorph
;
# Let's start moving these
define DeletionVowel V (->) %+DelV .o. 
# Need to let through things without %+Delv
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] .o.  
0:%+DelV ?+ %+DelV:0 ?* | [%+DelV]* ~$[%+DelV] 
;

define DeletionCons C (->) %+DelC ;

define Gen [ DeletionVowel .o. DeletionCons .o. Shuffle .o. Syllabify ] ;

######################### OT CONSTRAINTS #############################

# The Viol family of constraints, and the accompanying comments in 
# this secton, are from Karttunen (2004).  His Finnish prosody
# script may be found at http://www.stanford.edu/~laurik/fsmbook .
#
# We use asterisks to mark constraint violations. Ordinary constraints
# such as Lapse assign single asterisks as the violation marks and the
# candidate with the fewest number is selected. Gradient constraints
# such as AllFeetFirst mark violations with sequences of asterisks.
# The number increases with distance from the word edge.

# Every instance of * in an output candidate is a violation.

define Viol ${*};

# We prune candidates with "lenient composition" that eliminates
# candidates that violate the constraint provided that at least
# one output candidate survives.

define Viol0 ~Viol;        # No violations
define Viol1 ~[Viol^2];    # At most one violation
define Viol2 ~[Viol^3];    # At most two violations
define Viol3 ~[Viol^4];    # etc.
define Viol4 ~[Viol^5];
define Viol5 ~[Viol^6];
define Viol6 ~[Viol^7];
define Viol7 ~[Viol^8];
define Viol8 ~[Viol^9];
define Viol9 ~[Viol^10];
define Viol10 ~[Viol^11];
define Viol11 ~[Viol^12];
define Viol12 ~[Viol^13];
define Viol13 ~[Viol^14];
define Viol14 ~[Viol^15];
define Viol15 ~[Viol^16];

# This eliminates the violation marks after the candidate set has
# been pruned by a constraint.

define Pardon {*} -> 0;

# End of Karttunen's code

########################## CONSTRAINTS ##############################

# Faithfulness constraints

define LinearityBetweenMorphemes [ %+MetBetweenMorph -> ... {*}] ;

define LinearityWithinMorpheme [ %+MetWithinMorph -> ... {*}] ;

define LinearityCC [ %+MetCC-> ... {*}] ;

define LinearityCV [ %+MetCV-> ... {*}] ;

define IdentVoice [ %+DeltaVoice -> ... {*}] ;

define IdentNasal [ %+DeltaNasal -> ... {*}] ;

define MaxV [ %+DelV -> ... {*}] ;

define MaxC [ %+DelC -> ... {*}] ;

# Markedness constraints

define NoGlottObs [ [ GLOTTAL OBSTRUENT ]/[GENTAGS | %+ | "."]-> ... {*}] ;

define NoComplexOnset [C C]/[GENTAGS | %+] -> ... {*} || EDGE _ ;

define NoComplexCoda [C C]/[GENTAGS | %+ ] -> ... {*} || _ EDGE ;

# If a syllable is all consonants, it violates this
# If we use ~$[V], are we okay?
# That might be a problem because it'll match syllable boundary
# but it's minimal matching? not greedy?
define SonorantNucleus ~$V -> ... {*} || EDGE _ EDGE ;

define HasOnset V -> ... {*} || EDGE/[GENTAGS | %+ ] _ ;

define Linearity [ %+Met -> ... {*}] ;

define LinearityVV [ %+MetVV -> ... {*}] ;

define HasPrimaryStress ~$PRIMARYSTRESS -> ... {*} || .#. _ .#. ;

define OnlyOnePrimaryStress $[PRIMARYSTRESS ?* PRIMARYSTRESS] -> ... {*} || .#. _ .#. ;

define NoStressClash SS/[GENTAGS | %+] "." SS/[GENTAGS | %+ ] -> ... {*} ;

# I might prefer to do this as binary feet
define NoDoubledUnstressed USS/[GENTAGS | %+] "." USS/[GENTAGS | %+ ] -> ... {*} ;

# Is this why syllabification is breaking?
define SSP $[ V+ C+ V+ ]/[GENTAGS | %+] -> ... {*} || EDGE _ EDGE;

define InitialStress ~$PRIMARYSTRESS -> ... {*} || .#. _ EDGE/[GENTAGS | %+] ;

########################## READABILITY ##############################

# Remove tags, turn placeholders to IPA
# ' is currently glottal stop
define Pretty [ GENTAGS | %+ ] -> 0 .o.
I -> ɨ;

define Readable [GENTAGS | %+ ] -> 0 ;

read regex Morphology .o. Gen 
.o. LinearityVV .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. LinearityCV .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. SonorantNucleus .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. HasOnset .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. SSP .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoComplexOnset .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoComplexCoda .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. LinearityWithinMorpheme .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. LinearityBetweenMorphemes .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. MaxV .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. MaxC .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoGlottObs .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. LinearityCC .O. Viol5 .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
#.o. Pretty
.o. Readable
;

echo ** hIgIp
down hIgIp;
echo ** hIgIpIn
down hIgIp+In;
echo ** No metathesis
echo ** puhIgIp
down pu+hIgIp;

echo ** hIdIm
down hIdIm;
echo ** hIdIm+In
down hIdIm+In;
echo ** No metathesis
echo ** pu+hIdIm
down pu+hIdIm;

echo ** hIdIn
down hIdIn;
echo ** hIdIn+In
down hIdIn+In;
echo ** No metathesis
echo ** pu+hIdIn
down pu+hIdIn;

echo ** gihib
down gihib;
echo ** No metathesis
echo ** gihib+In
down gihib+In;
echo ** pu+gihib
down pu+gihib;

echo ** ledeh
down ledeh;
echo ** ledeh+In
down ledeh+In;
echo ** pu+ledeh
down pu+ledeh;
echo ** ledeh+to
down ledeh+to;
