# -*- coding: utf-8 -*-

# Faux Fur

# Morphology

################################## DATA #################################

define ROOTS {lat} | {ba} | {mul} ;

############################# BASIC DEFINITIONS #########################

define V [ a | e | i | o | u ] ;
define C [ b | d | f | g | j | %[PalatalJ%] | k | l | m | n | %[Engma%] | %[PalatalN%] | r | s | t | w | y ] ;

define SEGMENTS [ V | C ] ;

define BILABIAL [ b | m | f ] ;
define SONORANT [ V | l ] ;
define NASAL [ m | n | %[Engma%] %[PalatalN%] ] ;

define PERSON [ %+1st | %+2nd | %+3rd] ;
define NUMBER [ %+Sing | %+Pl ] ;
define TENSE [ %+Perfect ] ;

define GENTAGS [ %+DeltaNasal | %+DeltaVoice | %+Met ] ;

define TAGS [ PERSON | NUMBER | TENSE ] ;

define BOUNDARY [ %+ | .#. ] ;

############################# MORPHOLOGY ################################

# To do: allow free order in tags
# Do metathesis first
# All persons and numbers except 3Sing
# Tags contain 1st, or 2nd, or 3rd and Pl
define Metathesizes ROOTS [ %+1st NUMBER | %+2nd NUMBER | %+3rd %+Pl ] TENSE;

define Reorder [ l:a a:l ?* | l:e e:l ?* | l:i i:l ?* | l:o o:l ?* |
l:u u:l ?* | m:a a:m ?*  | m:e e:m ?* | m:i i:m ?* | m:o o:m ?* | m:u u:m ?* |
b:a a:b ?*  | b:e e:b ?* | b:i i:b ?* | b:o o:b ?* | b:u u:b ?* |
d:a a:d ?*  | d:e e:d ?* | d:i i:d ?* | d:o o:d ?* | d:u u:d ?* 
] ;

define NoMetathesis ROOTS %+3rd %+Sing TENSE ;

define Personal1 [ [ Metathesizes .o. Reorder ] | NoMetathesis]  ;

# 1st and 3rd Sing have no prefixes and pass through
# Literal + marks morpheme boundary

# Can't use ROOTS here because metathesis has applied
define PersPrefixes [ 
    SEGMENTS+ [ [ %+1st | %+3rd ] %+Sing ] TENSE |
    0:j 0:%+ SEGMENTS+/%+ [ %+2nd %+Sing ] TENSE |
    0:b 0:%+ SEGMENTS+/%+ [ %+2nd %+Pl ] TENSE |
    0:k 0:%+ SEGMENTS+/%+ [ [ %+1st | %+3rd ] %+Pl ] TENSE
];

# Perfect tense
# 3rd Pl gets a different ending than the rest

define AddTense [
    SEGMENTS+/%+ 0:%+ 0:i %+3rd:0 %+Sing:0 %+Perfect:0 |
    SEGMENTS+/%+ 0:%+ 0:i [ %+1st | %+2nd ]:0 NUMBER:0 %+Perfect:0 |
    SEGMENTS+/%+ 0:%+ 0:i 0:e %+3rd:0 %+Pl:0 %+Perfect:0 
] ;

define Morphology Personal1 .o. PersPrefixes .o. AddTense ;

################################### GEN ##################################

define VoiceCoronal t (->) d %+DeltaVoice ;

define Denasalize n (->) d %+DeltaNasal .o.
m (->) b %+DeltaNasal .o.
%[PalatalN%] (->) t j %+DeltaNasal .o.
%[Engma%] (->) g %+DeltaNasal 
;

# Applies more than once, BUT ends up with interspersed tags
define Shuffle [ [ ?* m:l l:m ?* []:%+Met | ~$[m l] ] | ?* ] .o.
[ [ ?* f:l l:f ?* []:%+Met | ~$[f l] ] | ?* ] .o.
[ [ ?* b:l l:b ?* []:%+Met | ~$[b l] ] | ?* ] .o.
[ [ ?* d:l l:d ?* []:%+Met | ~$[d l] ] | ?* ] 
;

# OT Constraints

define Gen [ VoiceCoronal .o. Denasalize .o. Shuffle ] ;
#define Gen [ VoiceCoronal .o. Shuffle ] ;

######################### OT CONSTRAINTS #############################

# We use asterisks to mark constraint violations. Ordinary constraints
# such as Lapse assign single asterisks as the violation marks and the
# candidate with the fewest number is selected. Gradient constraints
# such as AllFeetFirst mark violations with sequences of asterisks.
# The number increases with distance from the word edge.

# Every instance of * in an output candidate is a violation.

define Viol ${*};

# We prune candidates with "lenient composition" that eliminates
# candidates that violate the constraint provided that at least
# one output candidate survives.

define Viol0 ~Viol;        # No violations
define Viol1 ~[Viol^2];    # At most one violation
define Viol2 ~[Viol^3];    # At most two violations
define Viol3 ~[Viol^4];    # etc.
define Viol4 ~[Viol^5];
define Viol5 ~[Viol^6];
define Viol6 ~[Viol^7];
define Viol7 ~[Viol^8];
define Viol8 ~[Viol^9];
define Viol9 ~[Viol^10];
define Viol10 ~[Viol^11];
define Viol11 ~[Viol^12];
define Viol12 ~[Viol^13];
define Viol13 ~[Viol^14];
define Viol14 ~[Viol^15];
define Viol15 ~[Viol^16];

# This eliminates the violation marks after the candidate set has
# been pruned by a constraint.

define Pardon {*} -> 0;

########################## CONSTRAINTS ##############################

# Faithfulness constraints

define Linearity [ %+Met -> ... {*}] ;

define IdentVoice [ %+DeltaVoice -> ... {*}] ;

define IdentNasal [ %+DeltaNasal -> ... {*}] ;

# Markedness constraints

define NoBL [ [ BILABIAL l ]/[GENTAGS | %+]-> ... {*}] ;

define NoSonTSon t -> t {*} || SONORANT/[GENTAGS | %+] _ SONORANT/[GENTAGS | %+ ];

define StrongRootInitCons [ NASAL -> ... {*} || BOUNDARY _ ] ;

########################## READABILITY ##############################

# Remove tags, turn placeholders to IPA
define Pretty [ GENTAGS | %+ ] -> 0 .o.
%[PalatalJ%] -> ɟ .o.
%[PalatalN%] -> ɲ .o.
%[Engma%] -> ŋ ;

read regex Morphology .o. Gen 
.o. NoBL .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. Linearity .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoSonTSon .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. IdentVoice .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. StrongRootInitCons .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. IdentNasal .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. Pretty
;

echo Real order
echo Forms of /lat/

echo **
echo lat+1st+Sing+Perfect
down lat+1st+Sing+Perfect

echo **
echo lat+2nd+Sing+Perfect
down lat+2nd+Sing+Perfect

echo **
echo lat+3rd+Sing+Perfect
down lat+3rd+Sing+Perfect

echo **
echo lat+1st+Pl+Perfect
down lat+1st+Pl+Perfect

echo **
echo lat+2nd+Pl+Perfect
down lat+2nd+Pl+Perfect

echo **
echo lat+3rd+Pl+Perfect
down lat+3rd+Pl+Perfect

echo **
echo Forms of /ba/

echo **
echo ba+1st+Sing+Perfect
down ba+1st+Sing+Perfect

echo **
echo ba+2nd+Sing+Perfect
down ba+2nd+Sing+Perfect

echo **
echo ba+3rd+Sing+Perfect
down ba+3rd+Sing+Perfect

echo **
echo ba+1st+Pl+Perfect
down ba+1st+Pl+Perfect

echo **
echo ba+2nd+Pl+Perfect
down ba+2nd+Pl+Perfect

echo **
echo ba+3rd+Pl+Perfect
down ba+3rd+Pl+Perfect

echo **
echo Forms of /mul/

echo **
echo mul+1st+Sing+Perfect
down mul+1st+Sing+Perfect

echo **
echo mul+2nd+Sing+Perfect
down mul+2nd+Sing+Perfect

echo **
echo mul+3rd+Sing+Perfect
down mul+3rd+Sing+Perfect

echo **
echo mul+1st+Pl+Perfect
down mul+1st+Pl+Perfect

echo **
echo mul+2nd+Pl+Perfect
down mul+2nd+Pl+Perfect

echo **
echo mul+3rd+Pl+Perfect
down mul+3rd+Pl+Perfect

read regex Morphology .o. Gen 
.o. IdentNasal .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. StrongRootInitCons .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. Linearity .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoBL .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. IdentVoice .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. NoSonTSon .O. Viol4 .O. Viol3 .O. Viol2 .O. Viol1 .O. Viol0 .o. Pardon
.o. Pretty
;

echo Reordered
echo Forms of /lat/

echo **
echo lat+1st+Sing+Perfect
down lat+1st+Sing+Perfect

echo **
echo lat+2nd+Sing+Perfect
down lat+2nd+Sing+Perfect

echo **
echo lat+3rd+Sing+Perfect
down lat+3rd+Sing+Perfect

echo **
echo lat+1st+Pl+Perfect
down lat+1st+Pl+Perfect

echo **
echo lat+2nd+Pl+Perfect
down lat+2nd+Pl+Perfect

echo **
echo lat+3rd+Pl+Perfect
down lat+3rd+Pl+Perfect

echo **
echo Forms of /ba/

echo **
echo ba+1st+Sing+Perfect
down ba+1st+Sing+Perfect

echo **
echo ba+2nd+Sing+Perfect
down ba+2nd+Sing+Perfect

echo **
echo ba+3rd+Sing+Perfect
down ba+3rd+Sing+Perfect

echo **
echo ba+1st+Pl+Perfect
down ba+1st+Pl+Perfect

echo **
echo ba+2nd+Pl+Perfect
down ba+2nd+Pl+Perfect

echo **
echo ba+3rd+Pl+Perfect
down ba+3rd+Pl+Perfect

echo **
echo Forms of /mul/

echo **
echo mul+1st+Sing+Perfect
down mul+1st+Sing+Perfect

echo **
echo mul+2nd+Sing+Perfect
down mul+2nd+Sing+Perfect

echo **
echo mul+3rd+Sing+Perfect
down mul+3rd+Sing+Perfect

echo **
echo mul+1st+Pl+Perfect
down mul+1st+Pl+Perfect

echo **
echo mul+2nd+Pl+Perfect
down mul+2nd+Pl+Perfect

echo **
echo mul+3rd+Pl+Perfect
down mul+3rd+Pl+Perfect
